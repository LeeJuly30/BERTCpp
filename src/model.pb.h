// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_model_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_model_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_model_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_model_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_model_2eproto;
class Model;
class ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class Model_Paramter;
class Model_ParamterDefaultTypeInternal;
extern Model_ParamterDefaultTypeInternal _Model_Paramter_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Model* Arena::CreateMaybeMessage<::Model>(Arena*);
template<> ::Model_Paramter* Arena::CreateMaybeMessage<::Model_Paramter>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Model_Paramter :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Model.Paramter) */ {
 public:
  Model_Paramter();
  virtual ~Model_Paramter();

  Model_Paramter(const Model_Paramter& from);
  Model_Paramter(Model_Paramter&& from) noexcept
    : Model_Paramter() {
    *this = ::std::move(from);
  }

  inline Model_Paramter& operator=(const Model_Paramter& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model_Paramter& operator=(Model_Paramter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Model_Paramter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model_Paramter* internal_default_instance() {
    return reinterpret_cast<const Model_Paramter*>(
               &_Model_Paramter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Model_Paramter& a, Model_Paramter& b) {
    a.Swap(&b);
  }
  inline void Swap(Model_Paramter* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Model_Paramter* New() const final {
    return CreateMaybeMessage<Model_Paramter>(nullptr);
  }

  Model_Paramter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Model_Paramter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Model_Paramter& from);
  void MergeFrom(const Model_Paramter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model_Paramter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Model.Paramter";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimFieldNumber = 3,
    kDataFieldNumber = 4,
    kNameFieldNumber = 1,
    kNDimFieldNumber = 2,
  };
  // repeated int32 dim = 3;
  int dim_size() const;
  private:
  int _internal_dim_size() const;
  public:
  void clear_dim();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dim(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_dim() const;
  void _internal_add_dim(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_dim();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 dim(int index) const;
  void set_dim(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_dim(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      dim() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_dim();

  // repeated float data = 4;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  float _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_data() const;
  void _internal_add_data(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_data();
  public:
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_data();

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 n_dim = 2;
  void clear_n_dim();
  ::PROTOBUF_NAMESPACE_ID::int32 n_dim() const;
  void set_n_dim(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_n_dim() const;
  void _internal_set_n_dim(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Model.Paramter)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > dim_;
  mutable std::atomic<int> _dim_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 n_dim_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class Model :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }
  inline void Swap(Model* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const final {
    return CreateMaybeMessage<Model>(nullptr);
  }

  Model* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Model>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Model";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Model_Paramter Paramter;

  // accessors -------------------------------------------------------

  enum : int {
    kParamFieldNumber = 1,
  };
  // repeated .Model.Paramter param = 1;
  int param_size() const;
  private:
  int _internal_param_size() const;
  public:
  void clear_param();
  ::Model_Paramter* mutable_param(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Model_Paramter >*
      mutable_param();
  private:
  const ::Model_Paramter& _internal_param(int index) const;
  ::Model_Paramter* _internal_add_param();
  public:
  const ::Model_Paramter& param(int index) const;
  ::Model_Paramter* add_param();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Model_Paramter >&
      param() const;

  // @@protoc_insertion_point(class_scope:Model)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Model_Paramter > param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model_Paramter

// string name = 1;
inline void Model_Paramter::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Model_Paramter::name() const {
  // @@protoc_insertion_point(field_get:Model.Paramter.name)
  return _internal_name();
}
inline void Model_Paramter::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Model.Paramter.name)
}
inline std::string* Model_Paramter::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Model.Paramter.name)
  return _internal_mutable_name();
}
inline const std::string& Model_Paramter::_internal_name() const {
  return name_.GetNoArena();
}
inline void Model_Paramter::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Model_Paramter::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Model.Paramter.name)
}
inline void Model_Paramter::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.Paramter.name)
}
inline void Model_Paramter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.Paramter.name)
}
inline std::string* Model_Paramter::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Model_Paramter::release_name() {
  // @@protoc_insertion_point(field_release:Model.Paramter.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Model_Paramter::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Model.Paramter.name)
}

// int32 n_dim = 2;
inline void Model_Paramter::clear_n_dim() {
  n_dim_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Model_Paramter::_internal_n_dim() const {
  return n_dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Model_Paramter::n_dim() const {
  // @@protoc_insertion_point(field_get:Model.Paramter.n_dim)
  return _internal_n_dim();
}
inline void Model_Paramter::_internal_set_n_dim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  n_dim_ = value;
}
inline void Model_Paramter::set_n_dim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_n_dim(value);
  // @@protoc_insertion_point(field_set:Model.Paramter.n_dim)
}

// repeated int32 dim = 3;
inline int Model_Paramter::_internal_dim_size() const {
  return dim_.size();
}
inline int Model_Paramter::dim_size() const {
  return _internal_dim_size();
}
inline void Model_Paramter::clear_dim() {
  dim_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Model_Paramter::_internal_dim(int index) const {
  return dim_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Model_Paramter::dim(int index) const {
  // @@protoc_insertion_point(field_get:Model.Paramter.dim)
  return _internal_dim(index);
}
inline void Model_Paramter::set_dim(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  dim_.Set(index, value);
  // @@protoc_insertion_point(field_set:Model.Paramter.dim)
}
inline void Model_Paramter::_internal_add_dim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  dim_.Add(value);
}
inline void Model_Paramter::add_dim(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_dim(value);
  // @@protoc_insertion_point(field_add:Model.Paramter.dim)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Model_Paramter::_internal_dim() const {
  return dim_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Model_Paramter::dim() const {
  // @@protoc_insertion_point(field_list:Model.Paramter.dim)
  return _internal_dim();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Model_Paramter::_internal_mutable_dim() {
  return &dim_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Model_Paramter::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:Model.Paramter.dim)
  return _internal_mutable_dim();
}

// repeated float data = 4;
inline int Model_Paramter::_internal_data_size() const {
  return data_.size();
}
inline int Model_Paramter::data_size() const {
  return _internal_data_size();
}
inline void Model_Paramter::clear_data() {
  data_.Clear();
}
inline float Model_Paramter::_internal_data(int index) const {
  return data_.Get(index);
}
inline float Model_Paramter::data(int index) const {
  // @@protoc_insertion_point(field_get:Model.Paramter.data)
  return _internal_data(index);
}
inline void Model_Paramter::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:Model.Paramter.data)
}
inline void Model_Paramter::_internal_add_data(float value) {
  data_.Add(value);
}
inline void Model_Paramter::add_data(float value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:Model.Paramter.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Model_Paramter::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Model_Paramter::data() const {
  // @@protoc_insertion_point(field_list:Model.Paramter.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Model_Paramter::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Model_Paramter::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Model.Paramter.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// Model

// repeated .Model.Paramter param = 1;
inline int Model::_internal_param_size() const {
  return param_.size();
}
inline int Model::param_size() const {
  return _internal_param_size();
}
inline void Model::clear_param() {
  param_.Clear();
}
inline ::Model_Paramter* Model::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:Model.param)
  return param_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Model_Paramter >*
Model::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:Model.param)
  return &param_;
}
inline const ::Model_Paramter& Model::_internal_param(int index) const {
  return param_.Get(index);
}
inline const ::Model_Paramter& Model::param(int index) const {
  // @@protoc_insertion_point(field_get:Model.param)
  return _internal_param(index);
}
inline ::Model_Paramter* Model::_internal_add_param() {
  return param_.Add();
}
inline ::Model_Paramter* Model::add_param() {
  // @@protoc_insertion_point(field_add:Model.param)
  return _internal_add_param();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Model_Paramter >&
Model::param() const {
  // @@protoc_insertion_point(field_list:Model.param)
  return param_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_model_2eproto
